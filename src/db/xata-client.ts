// Generated by Xata Codegen 0.30.1. Please do not edit.
import { env } from '@/lib/env';
import { buildClient } from '@xata.io/client';
import type { BaseClientOptions, SchemaInference } from '@xata.io/client';

const tables = [] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: env.XATA_DB_URL,
  apiKey: env.XATA_API_KEY,
  branch: env.XATA_BRANCH,
};

export class XataClient extends DatabaseClient {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
